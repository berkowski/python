"""Clock and power client library functions. See LPC17xx CMSIS-Compliant
Standard Peripheral Firmware Driver Library documentation.
"""

from internals import robocaller, cstruct

__author__ =			"Neil MacMunn"
__email__ =				"neil@gumstix.com"
__copyright__ = 	"Copyright 2010, Gumstix Inc"
__license__ = 		"BSD 2-Clause"
__version__ =			"0.1"

CLKPWR_PCLKSEL_WDT = 0
CLKPWR_PCLKSEL_TIMER0 = 2
CLKPWR_PCLKSEL_TIMER1 = 4
CLKPWR_PCLKSEL_UART0 = 6
CLKPWR_PCLKSEL_UART1 = 8
CLKPWR_PCLKSEL_PWM1 = 12
CLKPWR_PCLKSEL_I2C0 = 14
CLKPWR_PCLKSEL_SPI = 16
CLKPWR_PCLKSEL_SSP1 = 20
CLKPWR_PCLKSEL_DAC = 22
CLKPWR_PCLKSEL_ADC = 24
CLKPWR_PCLKSEL_CAN1 = 26
CLKPWR_PCLKSEL_CAN2 = 28
CLKPWR_PCLKSEL_ACF = 30
CLKPWR_PCLKSEL_QEI = 32
CLKPWR_PCLKSEL_PCB = 36
CLKPWR_PCLKSEL_I2C1 = 38
CLKPWR_PCLKSEL_SSP0 = 42
CLKPWR_PCLKSEL_TIMER2 = 44
CLKPWR_PCLKSEL_TIMER3 = 46
CLKPWR_PCLKSEL_UART2 = 48
CLKPWR_PCLKSEL_UART3 = 50
CLKPWR_PCLKSEL_I2C2 = 52
CLKPWR_PCLKSEL_I2S = 54
CLKPWR_PCLKSEL_RIT = 58
CLKPWR_PCLKSEL_SYSCON = 60
CLKPWR_PCLKSEL_MC = 62
CLKPWR_PCLKSEL_CCLK_DIV_4 = 0
CLKPWR_PCLKSEL_CCLK_DIV_1 = 1
CLKPWR_PCLKSEL_CCLK_DIV_2 = 2
CLKPWR_PCONP_PCTIM0 = 1<<1
CLKPWR_PCONP_PCTIM1 = (1<<2)
CLKPWR_PCONP_PCUART0 = (1<<3)
CLKPWR_PCONP_PCUART1 = (1<<4)
CLKPWR_PCONP_PCPWM1 = (1<<6)
CLKPWR_PCONP_PCI2C0 = (1<<7)
CLKPWR_PCONP_PCSPI = (1<<8)
CLKPWR_PCONP_PCRTC = (1<<9)
CLKPWR_PCONP_PCSSP1 = (1<<10)
CLKPWR_PCONP_PCAD = (1<<12)
CLKPWR_PCONP_PCAN1 = (1<<13)
CLKPWR_PCONP_PCAN2 = (1<<14)
CLKPWR_PCONP_PCGPIO = (1<<15)
CLKPWR_PCONP_PCRIT = (1<<16)
CLKPWR_PCONP_PCMC = (1<<17)
CLKPWR_PCONP_PCQEI = (1<<18)
CLKPWR_PCONP_PCI2C1 = (1<<19)
CLKPWR_PCONP_PCSSP0 = (1<<21)
CLKPWR_PCONP_PCTIM2 = (1<<22)
CLKPWR_PCONP_PCTIM3 = (1<<23)
CLKPWR_PCONP_PCUART2 = (1<<24)
CLKPWR_PCONP_PCUART3 = (1<<25)
CLKPWR_PCONP_PCI2C2 = (1<<26)
CLKPWR_PCONP_PCI2S = (1<<27)
CLKPWR_PCONP_PCGPDMA = (1<<29)
CLKPWR_PCONP_PCENET = (1<<30)
CLKPWR_PCONP_PCUSB = (1<<31)
CLKPWR_CLKSRCSEL_CLKSRC_IRC = (0x00)
CLKPWR_CLKSRCSEL_CLKSRC_MAINOSC = (0x01)
CLKPWR_CLKSRCSEL_CLKSRC_RTC = (0x02)
CLKPWR_CLKSRCSEL_BITMASK = (0x03)
CLKPWR_CLKOUTCFG_CLKOUTSEL_CPU = (0x00)
CLKPWR_CLKOUTCFG_CLKOUTSEL_MAINOSC = (0x01)
CLKPWR_CLKOUTCFG_CLKOUTSEL_RC = (0x02)
CLKPWR_CLKOUTCFG_CLKOUTSEL_USB = (0x03)
CLKPWR_CLKOUTCFG_CLKOUTSEL_RTC = (0x04)

def CLKPWR_CLKOUTCFG_CLKOUTDIV(n):
	return ((n&0x0F)<<4)
	
CLKPWR_CLKOUTCFG_CLKOUT_EN = (1<<8)
CLKPWR_CLKOUTCFG_CLKOUT_ACT = (1<<9)
CLKPWR_CLKOUTCFG_BITMASK = (0x3FF)
CLKPWR_PLL0CON_ENABLE = (0x01)
CLKPWR_PLL0CON_CONNECT = (0x02)
CLKPWR_PLL0CON_BITMASK = (0x03)

def CLKPWR_PLL0CFG_MSEL(n):
  return ((n&0x7FFF))
  
def CLKPWR_PLL0CFG_NSEL(n):
  return (((n<<16)&0xFF0000))
  
CLKPWR_PLL0CFG_BITMASK = ((0xFF7FFF))

def CLKPWR_PLL0STAT_MSEL(n):
  return ((n&0x7FFF))
  
def CLKPWR_PLL0STAT_NSEL(n):
  return (((n>>16)&0xFF))
  
CLKPWR_PLL0STAT_PLLE = (1<<24)
CLKPWR_PLL0STAT_PLLC = (1<<25)
CLKPWR_PLL0STAT_PLOCK = (1<<26)
CLKPWR_PLL0FEED_BITMASK = (0xFF)
CLKPWR_PLL1CON_ENABLE = (0x01)
CLKPWR_PLL1CON_CONNECT = (0x02)
CLKPWR_PLL1CON_BITMASK = (0x03)

def CLKPWR_PLL1CFG_MSEL(n):
  return ((n&0x1F))
  
def CLKPWR_PLL1CFG_PSEL(n):
  return (((n&0x03)<<5))
  
CLKPWR_PLL1CFG_BITMASK = ((0x7F))

def CLKPWR_PLL1STAT_MSEL(n):
  return ((n&0x1F))
  
def CLKPWR_PLL1STAT_PSEL(n):
  return (((n>>5)&0x03))
  
CLKPWR_PLL1STAT_PLLE = (1<<8)
CLKPWR_PLL1STAT_PLLC = (1<<9)
CLKPWR_PLL1STAT_PLOCK = (1<<10)

CLKPWR_PLL1FEED_BITMASK = (0xFF)
CLKPWR_CCLKCFG_BITMASK = ((0xFF))
CLKPWR_USBCLKCFG_BITMASK = ((0x0F))
CLKPWR_IRCTRIM_BITMASK = ((0x0F))
CLKPWR_PCLKSEL0_BITMASK = ((0xFFF3F3FF))
CLKPWR_PCLKSEL1_BITMASK = ((0xFCF3F0F3))

def CLKPWR_PCLKSEL_SET(p,n):
	return _SBF(p,n)

def CLKPWR_PCLKSEL_BITMASK(p):
  return _SBF(p,0x03)
  
def CLKPWR_PCLKSEL_GET(p, n):
	return (((n>>p)&0x03))
	
CLKPWR_PCON_PM0 = (1<<0)
CLKPWR_PCON_PM1 = (1<<1)
CLKPWR_PCON_BODPDM = (1<<2)
CLKPWR_PCON_BOGD = (1<<3)
CLKPWR_PCON_BORD = (1<<4)
CLKPWR_PCON_SMFLAG = (1<<8)
CLKPWR_PCON_DSFLAG = (1<<9)
CLKPWR_PCON_PDFLAG = (1<<10)
CLKPWR_PCON_DPDFLAG = (1<<11)

CLKPWR_PCONP_BITMASK = 0xEFEFF7DE

def CLKPWR_SetPCLKDiv(ClkType, DivVal):
	return robocaller("CLKPWR_SetPCLKDiv", "void", ClkType, DivVal)

def CLKPWR_Sleep():
	return robocaller("CLKPWR_Sleep", "void", )

def CLKPWR_DeepSleep():
	return robocaller("CLKPWR_DeepSleep", "void", )

def CLKPWR_PowerDown():
	return robocaller("CLKPWR_PowerDown", "void", )

def CLKPWR_GetPCLK(ClkType):
	return robocaller("CLKPWR_GetPCLK", "uint32_t", ClkType)

def CLKPWR_ConfigPPWR(PPType, NewState):
	return robocaller("CLKPWR_ConfigPPWR", "void", PPType, NewState)

def CLKPWR_GetPCLKSEL(ClkType):
	return robocaller("CLKPWR_GetPCLKSEL", "uint32_t", ClkType)

def CLKPWR_DeepPowerDown():
	return robocaller("CLKPWR_DeepPowerDown", "void", )

